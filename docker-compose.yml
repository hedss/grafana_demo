version: "2.1"
volumes:
  grafana:
  mythical:
  postgres:
services:
  creatures:
    build: ./mythical-creatures
    ports:
      - "4000:4000"
      - "80:80"
    volumes:
      - "mythical:/mythical"
    depends_on:
      - postgres
  requester:
    build: ./http-requester
    depends_on:
      - creatures
  prometheus:
    build: ./prometheus
    ports:
      - "9090:9090"    
  grafana:
    image: grafana/grafana
    volumes:
      - "grafana:/var/lib/grafana"
      - "${PWD}/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml"
    ports:
      - "3000:3000"
  loki:
    image: grafana/loki
    ports:
      - "3100:3100"
  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: "mythical"
    volumes:
      - "postgres:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
  nodeexporter:
    image: prom/node-exporter
    privileged: true
    ports:
      - "9100:9100"
  tempo:
    image: grafana/tempo
    ports:
      - "4317:4317"
      - "55680:55680"
      - "55681:55681"
      - "14250:14250"
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
  otel-collector:
    image: otel/opentelemetry-collector
    ports:
      - "6832:6832"
      - "55679:55679"
    volumes:
      - "${PWD}/otel/config.yaml:/etc/otel/config.yaml"
